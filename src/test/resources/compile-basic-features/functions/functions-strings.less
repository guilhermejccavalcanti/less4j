#e {
  content1: e("'") e("\"") e("\'") e('"') e('\"') e('\'');
  content2: e("this is something {}");
  something1: e("1+2;");
//  something2: e(`1+2`); TODO javascript is not implemented yet
}

#e-empty {
  empty-string: e('') e("") ;
  empty-escape: e(~'') e(~"") ;
}
#e-NonString {
  e1: e(~"abcdefghijklmnopqrstuvxyz ABCDEFGHIJKLMNOPQRSTUVXYZ09");
  e2: e(~"~!@#$^&*()_+}{|:> <.,';][p/\"");
  e3: e(~"\\");
  e4: e(~"//");
  e5: e(11);
  e5: e(11+22);
//  e5: e(green); returns weird objects
//  e5: e(#ff8877); returns weird objects
//  e9: e(11 12 14 "test"); returns weird objects
}

#escape {
  escape1: escape("abcdefghijklmnopqrstuvxyz ABCDEFGHIJKLMNOPQRSTUVXYZ09");
  escape2: escape("; , / ? : @ & = + $ - _ . ! ~ * ' ( )");
  escape3: escape("~!@#$^&*()_+}{|:><.,';][p");
  escape4: escape("\\");
  escape5: escape("//");
  escape6: escape("");
  @variable: "test";
  escape7: escape("@{variable}");
}
#escapeNonString {
  escape1: escape(~"abcdefghijklmnopqrstuvxyz ABCDEFGHIJKLMNOPQRSTUVXYZ09");
  escape2: escape(~"; , / ? : @ & = + $ - _ . ! ~ * ' ( )");
  escape3: escape(~"~!@#$^&*()_+}{|:><.,';][p");
  escape4: escape(~"\\");
  escape5: escape(~"//");
  escape6: escape(#ff8877);
  escape6b: escape(green);
  escape7: escape(identifier);
  escape8: escape(11);
//  escape9: escape(11 12 14 "test");
}

#e-escape {
  something1: escape(e("1+2;"));
}

.formattingMixin(@name, @parameter) {
  format1: @name %("%% s: %s", @parameter);
  format2: @name %("%% S: %S", @parameter);
  format3: @name %("%% d: %d", @parameter);
  format4: @name %("%% D: %D", @parameter);
  format5: @name %("%% a: %a", @parameter);
  format6: @name %('%% A: %A', @parameter);
}

#format {
  .formattingMixin(~"string1", "directory/file.less");
  .formattingMixin(~"string2", 'directory/file.less');
  .formattingMixin(~"expression", 1+2);
  .formattingMixin(~"escape", ~"size-10%");
  .formattingMixin(~"named color", green);
  .formattingMixin(~"hex color", #ff00ff);
}

#format-specialCharacters {
  .formattingMixin(~"special1", "~!@#$^&*()_+}{|:> <.,';][p/\"");
  .formattingMixin(~"special2", "; , / ? : @ & = + $ - _ . ! ~ * ' ( )");
}

#format-a-lot-of-placeholders {
  format-exact: %("%s %S %d %D", "1", "2", 3, 4);
  format-missing: %("%s %S %d %D", "1", "2");
  format-additional: %("%s %S %d %D", "1", "2", 3, 4, 5, 6);
}

#format-notString {
  format-wrong1: %(~"repetitions: %a file: %d", 1 + 2, "directory/file.less");
  format-wrong2: %("repetitions: %q file: %1", 1 + 2, "directory/file.less");
}

#format-interpolated-replacement {
  @variable: "it worked!";
  format-exact: %("variable: %s", " - @{variable} - ");
}

.formattingMixinNoS(@name, @parameter, @useless) {
  format1: @name %("%% d: %d", @parameter);
  format2: @name %("%% D: %D", @parameter);
  format3: @name %("%% a: %a", @parameter);
  format4: @name %('%% A: %A', @parameter);
}

#format-list {
 @variable: ~"whatever";
 .formattingMixinNoS(list1, 1 2 3 4, 3 4 4 5);
 .formattingMixinNoS(list2, "1 @{variable}" "2 @{variable}" "3 @{variable}" "4 @{variable}", 3 4 4 5);
 .formattingMixinNoS(list3, 1 2+3 3 4, 3 4 4 5);
}

#format-list-split {
 @variable: ~"whatever";
 format2: %("d: %d %d", "1 @{variable}" "2 @{variable}", 5); //TODO this gives suspect result <- it is unescaped
}

//not accepted by less.js
//#format-list-split {
//  list-split: %("%d - %d - %d - %d", 1 1 1 1, 2 2 2 2, 3 3 3 3, 4 4 4 4);
//}
